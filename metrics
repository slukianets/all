#!/usr/bin/python

import sys, getopt
import psutil
import socket

system = socket.gethostname()
def cpu_info( per_cpu = True):
    print("START CPU")
    cpu_info = psutil.cpu_times(percpu = per_cpu)
    print("cpu_info: ", cpu_info )
    if (per_cpu):
        for i in range(0,len(cpu_info)):
            print("{0}.cpu_{2}.idle {1}".format(system,cpu_info[i].idle, i + 1))
            print("{0}.cpu_{2}.user {1}".format(system,cpu_info[i].user, i + 1))
            print("{0}.cpu_{2}.guest {1}".format(system,cpu_info[i].guest, i + 1))
            print("{0}.cpu_{2}.oiwait: {1}".format(system,cpu_info[i].iowait, i + 1))
            print("{0}.cpu_{2}.stolen: {1}".format(system,cpu_info[i].steal, i + 1))
            print("{0}.cpu_{2}.system: {1}".format(system,cpu_info[i].system, i + 1))
    else:
        print("{0}.cpu_total.idle {1}".format(system,cpu_info.idle))
        print("{0}.cpu_total.user {1}".format(system,cpu_info.user))
        print("{0}.cpu_total.guest {1}".format(system,cpu_info.guest))
        print("{0}.cpu_total.oiwait: {1}".format(system,cpu_info.iowait))
        print("{0}.cpu_total.stolen: {1}".format(system,cpu_info.steal))
        print("{0}.cpu_total.system: {1}".format(system,cpu_info.system))






#print("{0}.cpu_total.idle {1}".format(system,cpu_info.idle))
#        print("{0}.cpu_total.user {1}".format(system,cpu_info.user))
#        print("{0}.cpu_total.guest {1}".format(system,cpu_info.guest))
#        print("{0}.cpu_total.oiwait: {1}".format(system,cpu_info.iowait))
#        print("{0}.cpu_total.stolen: {1}".format(system,cpu_info.steal))
#        print("{0}.cpu_total.system: {1}".format(system,cpu_info.system))



def memory_info():
    print("START PROC")
    virtual_mem = psutil.virtual_memory()
    swaped_mem = psutil.swap_memory()
    print('Virtual Memory Total: {0}'.format(virtual_mem.total))
    print('Virtual Memory Used: {0}'.format(virtual_mem.used))
    print('Virtual Memory Free: {0}'.format(virtual_mem.available))
    print('Virtual Memory Shared: {0}'.format(virtual_mem.active))
    print('Swap Memory Total: {0}'.format(swaped_mem.total))
    print('Swap Memory Used: {0}'.format(swaped_mem.used))
    print('Swap Memory Free: {0}'.format(swaped_mem.free))

print("Number of arg: ", len(sys.argv))
print("Arg list: ", str(sys.argv[1:]))

#parser = optparse.OptionParser()
try:
    opts_list, args_list = getopt.getopt(sys.argv[1:], "hc:m", ["help", "cpu" ,"mem"])
except getopt.GetoptError as err:
    print(err)
    print("Please help yourself")
    sys.exit(2)
for opt, arg in opts_list:
    if opt == "--cpu":
        print(arg)
        if (arg):
            print("show cpu info per cpu")
            cpu_info(True)
        else:
            print("show cpu info")
            cpu_info()
    elif opt == "--mem":
        print("show memory info")
        memory_info()
    elif opt in ("-h", "--help"):
        print("HELP")

#parser.add_option("--cpu", dest="cpu_info")
#parser.add_option("--mem", dest="memory_info")
#opts_list, args_list = parser.parse_args()


#print(opts_list)
#print(args_list)

